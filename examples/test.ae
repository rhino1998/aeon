package main

type intIntMap map[int]int

type A *B

type B [3]int

extern func itoa(a int) string

extern func print(a string)

extern func printInt(a int)

extern func print3(a string, b string, c string)

extern func add(a int, b int) int

var d any

type iface interface {
  l()
}

type C struct {
  F func(D)
}

type D int

func (d D) l() {
  print("D")
	print(itoa(int(d)))
}

type E int

func (d E) l() {
  print("E")
	print(itoa(int(d)))
}

func h(d D) {
	d.l()
}

#init
func f2() {
  var y iface = D(7)
  y = E(7)

  y.l()
  y = D(7)
  y.l()
}
