package main

type intIntMap map[int]int

type A *B

type B [3]int

extern func itoa(a int) string

extern func print(a string)

extern func printInt(a int)

extern func print3(a string, b string, c string)

extern func add(a int, b int) int

var d any

type D int
func (D) l() {}

var k [20]int

var x func(a,b int) = h

func h(a,b int) {
	print(itoa(a+b))
}

func g(a,b int) {
	print(itoa(a-b))
}

func whatever() {
  y := D("hello")
  d = &y
  d = nil
	for i := 0; i < 16; i++ {
		print(itoa(f(i)))
	}
  return
}

func f(a int) int {
	if a <= 0 {
		return 0
	} else if a == 1 {
		return 1
	}

	return f(a-1) + f(a-2)
}

#update
func hello() {
	print("HELLO")
	return
#init
func f2() {
	x(1, 2)
	x = g
	x(1, 2)

	s := D.l
}
