package main

extern func itoa(x int) string

type list struct {
  head *node
}

func (l *list) PushBack(val int) {
  if l.head == nil {
    l.head = new(node)
    l.head.val = val
  } else {
    l.head.pushBack(val)
  }
}

type node struct {
  val int
  next *node
}

func (n *node) pushBack(val int) {
  if n.next == nil {
    n2 := new(node)
    n2.val = val
    n.next = n2
  } else {
    n.next.pushBack(val)
  }
}

type vec4 (int, int, int, int)

#init
func main() {
  var a vec4
  var b vec4
  var c vec4

  b = (1, 2, 3, 4)
  c = (2,1,1,1)

  for i := 0; i < 1000; i++ {
    a = a + b * c
  }

  printf("%d %d %d %d", a.0, a.1, a.2, a.3)
}
