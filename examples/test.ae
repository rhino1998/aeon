package main

extern func itoa(int) string

type Err string

func (e Err) Error() string {
  return "error: " + string(e)
}

type T struct {
  x int
}

func (t *T) Do() (*T, error) {
  if t.x == 6 {
    return nil, Err("hello")
  }
  t.x++
  return t, nil
}

func handler(err error) error {
  if err != nil {
    print(err.Error())
  }

  return nil
}

func run() error {
  var t T
  t.x=6
  t.Do()?

  return nil
}

type vec3 [3]float

func (v vec3) print() {
  printf("(%0.2f, %0.2f, %0.2f)", v[0], v[1], v[2])
}

#init
func main() {
  var ae error
  var be error
  a := vec3([...]float{1,2,3})
  b := vec3([3]float{1,2,4})
  c := vec3{1,2,4}
  a.print()
  b.print()
  c.print()
  (a+b).print()
  (a*b).print()
  (a**c).print()
}
